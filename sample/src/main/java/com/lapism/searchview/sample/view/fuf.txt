<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    style="?android:attr/buttonBarStyle"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:gravity="center"
    android:orientation="vertical">

    <Button
        android:id="@+id/button_classic"
        style="?android:attr/buttonBarButtonStyle"
        android:layout_width="@dimen/button_width"
        android:layout_height="wrap_content"
        android:text="@string/cheese_ipsum" />

    <Button
        android:id="@+id/button_delete"
        style="?android:attr/borderlessButtonStyle"
        android:layout_width="@dimen/button_width"
        android:layout_height="wrap_content"
        android:text="@string/delete"
        android:textColor="?colorPrimaryDark" />

</LinearLayout>

    <color name="shadow40">#40000000</color>
    <color name="shadow42">#42000000</color>
    <color name="dark_background">#FF424242</color>
    <color name="light_background">#FFFFFFFF</color>
    <color name="shadow_end_color">#03000000</color>
    <color name="shadow_start_color">#37000000</color>


            Toolbar toolbar = getActionBarToolbar();
            toolbar.setNavigationIcon(R.drawable.ic_up);
            toolbar.setNavigationContentDescription(R.string.close_and_go_back);
            toolbar.setNavigationOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View view) {
                    navigateUpOrBack(VideoLibraryFilteredActivity.this, null);
                }
            });

                @Override
                public boolean onCreateOptionsMenu(Menu menu) {
                    super.onCreateOptionsMenu(menu);

                    // Add the filter button to the toolbar.
                    Toolbar toolbar = getActionBarToolbar();
                    toolbar.inflateMenu(R.menu.video_library_filtered);
                    toolbar.setOnMenuItemClickListener(this);
                    return true;
                }

                        Toolbar toolbar = getActionBarToolbar();
                        toolbar.setNavigationIcon(R.drawable.ic_up);
                        toolbar.setNavigationContentDescription(R.string.close_and_go_back);
                        toolbar.setNavigationOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                NavUtils.navigateUpTo(SessionFeedbackActivity.this,
                                        getParentActivityIntent());
                            }
                        });

                                final Toolbar toolbar = getActionBarToolbar();
                                toolbar.setNavigationIcon(shouldBeFloatingWindow
                                        ? R.drawable.ic_ab_close : R.drawable.ic_up);
                                toolbar.setNavigationContentDescription(R.string.close_and_go_back);
                                toolbar.setNavigationOnClickListener(new View.OnClickListener() {
                                    @Override
                                    public void onClick(View view) {
                                        finish();
                                    }
                                });